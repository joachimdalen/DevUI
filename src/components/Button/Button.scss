@import "./Button.mixin.scss";
%outlined {
  background-color: $button-outlined-background;
}
.#{$provider-prefix}-button {
  font-size: $button-font-size;
  text-align: center;
  text-transform: capitalize;
  border-radius: $button-border-radius;
  padding: $button-padding;
  box-shadow: $box-shadow;
  color: $button-default-color;
  border: 2px solid;
  font-weight: $font-weight-regular;
  margin: 2px;
  background-color: $button-default-background;
  border-color: $button-default-border-color;
  display: inline-flex;
  align-items: center;
  height: $button-height;
  &.disabled {
    background-color: $button-disabled-background;
    border-color: transparent;
    color: $button-disabled-color;
  }
  &:hover:not(.disabled):not(.#{$provider-prefix}-button-loading) {
    cursor: pointer;
    background-color: $button-default-hover-background;
    border-color: $button-default-hover-border-color;
    transition: background-color 0.5s ease, border-color 0.5s ease;
  }

  &-block {
    border-radius: 0;
    display: block;
    width: 100%;
  }
  &-link {
    background-color: transparent;
    box-shadow: none;
    border: none;
    outline: none;
    color: blue;
    text-decoration: none;

    &:hover:not(.disabled):not(.#{$provider-prefix}-button-loading) {
      text-decoration: underline;
      cursor: pointer;
      background-color: transparent;
      border-color: none;
    }
  }
  &-outlined {
    @each $color, $value in $theme-colors {
      @include button-outlined("-#{$color}", $value);
    }
  }
  @each $color, $value in $theme-colors {
    @include button-variant("-#{$color}", $value);
  }

  &-dashed {
    border: 2px dashed;
    &:hover:not(.disabled) {
      border: 2px solid;
    }
  }
  &-loading {
    background-color: $button-loading-background;
    border-color: $button-loading-border-color;
    color: $button-loading-color;
  }
  &-icon-only {
    padding: 5px;
  }
  &-large {
    padding: $button-large-padding;
    font-size: $button-large-font-size;
    height: $button-large-height;
  }
  &-small:not(.#{$provider-prefix}-button-icon-only) {
    font-size: $button-small-font-size;
    padding: $button-small-padding;
    height: $button-small-height;
  }
  &-group {
    box-shadow: $box-shadow;
    display: flex;
    flex-direction: row;
    margin: 2px;
    .#{$provider-prefix}-button {
      margin: 0;
      border-radius: 0;
      box-shadow: none;
    }
    &-vertical {
      flex-direction: column;
    }
  }
}
.#{$provider-prefix}-split-button {
  position: relative;
  .#{$provider-prefix}-button {
    margin: 0;
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
    border-right: $split-button-border-width solid $split-button-border-color;
  }
  &-items {
    display: flex;
    flex-direction: row;
  }
  &-split {
    padding: 2px 4px;
    flex-grow: 1;
    display: block;

    &:hover {
      cursor: pointer;
    }
    border-top-right-radius: $button-border-radius;
    border-bottom-right-radius: $button-border-radius;
    @each $color, $value in $theme-colors {
      @include button-variant(
        ".#{$provider-prefix}-split-button-#{$color}",
        $value
      );
    }
  }
  &-actions {
    position: absolute;
    display: none;
    border: $split-button-menu-border-width solid $split-button-menu-border-color;
    background-color: $select-background;
    width: 100%;
    &-item {
      padding: $split-button-menu-item-padding;
      background-color: $split-button-menu-item-background;
      color: $split-button-menu-item-color;

      &:hover {
        background-color: $split-button-menu-item-hover-background;
        color: $split-button-menu-item-hover-color;
        cursor: pointer;
      }
    }
  }
  &-visible {
    .#{$provider-prefix}-split-button-actions {
      display: block;
    }
  }
}
